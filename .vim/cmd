#cloud-config
runcmd:
  - |
    #!/bin/bash

    set -e

    SECRET_NAME="your-secret-name"
    AWS_REGION="us-east-1"

    # Retrieve instance role credentials
    TOKEN=$(curl -s -X PUT "http://169.254.169.254/latest/api/token" \
        -H "X-aws-ec2-metadata-token-ttl-seconds: 21600")
    ROLE_NAME=$(curl -s -H "X-aws-ec2-metadata-token: $TOKEN" \
        http://169.254.169.254/latest/meta-data/iam/security-credentials/)
    CREDS_JSON=$(curl -s -H "X-aws-ec2-metadata-token: $TOKEN" \
        http://169.254.169.254/latest/meta-data/iam/security-credentials/$ROLE_NAME)

    AWS_ACCESS_KEY_ID=$(echo "$CREDS_JSON" | grep -oP '(?<="AccessKeyId" : ")[^"]+')
    AWS_SECRET_ACCESS_KEY=$(echo "$CREDS_JSON" | grep -oP '(?<="SecretAccessKey" : ")[^"]+')
    AWS_SESSION_TOKEN=$(echo "$CREDS_JSON" | grep -oP '(?<="Token" : ")[^"]+')

    # Prepare request to Secrets Manager API
    REQUEST_PAYLOAD="{\"SecretId\": \"$SECRET_NAME\"}"
    DATE=$(date -u "+%Y%m%dT%H%M%SZ")
    DATE_SHORT=$(date -u "+%Y%m%d")
    SERVICE="secretsmanager"
    HOST="secretsmanager.${AWS_REGION}.amazonaws.com"
    ENDPOINT="https://${HOST}"
    TARGET="secretsmanager.GetSecretValue"

    # Generate canonical request
    CANONICAL_REQUEST=$(printf "POST\n/\n\nhost:%s\nx-amz-date:%s\nx-amz-security-token:%s\nx-amz-target:%s\n\nhost;x-amz-date;x-amz-security-token;x-amz-target\n%s" \
        "$HOST" "$DATE" "$AWS_SESSION_TOKEN" "$TARGET" \
        "$(printf '%s' "$REQUEST_PAYLOAD" | sha256sum | awk '{print $1}')")

    # Generate string to sign
    CREDENTIAL_SCOPE="${DATE_SHORT}/${AWS_REGION}/${SERVICE}/aws4_request"
    STRING_TO_SIGN=$(printf "AWS4-HMAC-SHA256\n%s\n%s\n%s" \
        "$DATE" "$CREDENTIAL_SCOPE" \
        "$(printf '%s' "$CANONICAL_REQUEST" | sha256sum | awk '{print $1}')")

    # Compute signature
    function hmac_sha256() {
      key="$1"
      data="$2"
      printf '%s' "$data" | openssl dgst -binary -sha256 -mac HMAC -macopt "key:$key"
    }

    K_DATE=$(hmac_sha256 "AWS4${AWS_SECRET_ACCESS_KEY}" "${DATE_SHORT}")
    K_REGION=$(hmac_sha256 "$K_DATE" "${AWS_REGION}")
    K_SERVICE=$(hmac_sha256 "$K_REGION" "${SERVICE}")
    K_SIGNING=$(hmac_sha256 "$K_SERVICE" "aws4_request")
    SIGNATURE=$(printf '%s' "$STRING_TO_SIGN" | openssl dgst -sha256 -mac HMAC -macopt hexkey:$(echo -n "$K_SIGNING" | xxd -p -c 256) | awk '{print $2}')

    AUTH_HEADER="AWS4-HMAC-SHA256 Credential=${AWS_ACCESS_KEY_ID}/${CREDENTIAL_SCOPE}, SignedHeaders=host;x-amz-date;x-amz-security-token;x-amz-target, Signature=${SIGNATURE}"

    # Call Secrets Manager
    RESPONSE=$(curl -s -X POST "$ENDPOINT" \
        -H "Content-Type: application/x-amz-json-1.1" \
        -H "X-Amz-Date: $DATE" \
        -H "X-Amz-Security-Token: $AWS_SESSION_TOKEN" \
        -H "X-Amz-Target: $TARGET" \
        -H "Authorization: $AUTH_HEADER" \
        -d "$REQUEST_PAYLOAD")

    # Extract secret (assuming secret is stored as plaintext directly)
    PASSWORD=$(echo "$RESPONSE" | sed -n 's/.*"SecretString":"\([^"]*\)".*/\1/p')

    if [[ -z "$PASSWORD" ]]; then
      echo "Failed to retrieve secret value!"
      exit 1
    fi

    # Update admin user password
    echo "admin:$PASSWORD" | chpasswd

    echo "Password successfully updated."

